definitions:
  model.LangSet:
    enum:
    - Cpp
    - Java
    - Python
    - Go
    type: string
    x-enum-varnames:
    - CPP
    - JAVA
    - PYTHON
    - GO
  model.Problem:
    properties:
      dataRange:
        description: options
        type: string
      description:
        type: string
      memoryLimit:
        type: integer
      pid:
        type: string
      point:
        type: integer
      tags:
        items:
          type: string
        type: array
      testSamples:
        items:
          $ref: '#/definitions/model.TestCase'
        type: array
      timeLimit:
        type: integer
      title:
        type: string
      tutorial:
        type: string
    type: object
  model.StatusSet:
    enum:
    - Pending
    - Compiling
    - Judging
    - Compile Error
    - Accept
    - Wrong Answer
    - Time Limit Exceeded
    - Memory Limit Exceeded
    - Runtime Error
    - Output Limit Exceeded
    - Unknow Error
    type: string
    x-enum-varnames:
    - PENDING
    - COMPILING
    - JUDGING
    - CE
    - AC
    - WA
    - TLE
    - MLE
    - RE
    - OLE
    - UKE
  model.Submission:
    properties:
      lang:
        $ref: '#/definitions/model.LangSet'
      pid:
        type: string
      point:
        description: options
        type: integer
      runningMemory:
        type: integer
      runningTime:
        type: integer
      sid:
        type: string
      status:
        $ref: '#/definitions/model.StatusSet'
      submitCode:
        type: string
      submitTime:
        type: string
      uid:
        type: integer
    type: object
  model.TestCase:
    properties:
      explanation:
        type: string
      input:
        type: string
      note:
        type: string
      output:
        type: string
    type: object
  request.ChangePasswordRequest:
    properties:
      newPassword:
        type: string
      password:
        type: string
    type: object
  request.LoginRequest:
    properties:
      password:
        example: 密码
        type: string
      username:
        example: 用户名
        type: string
    type: object
  request.RegisterRequest:
    properties:
      password:
        example: 密码
        type: string
      username:
        example: 用户名
        type: string
    type: object
  response.ChangePasswordResponse:
    properties:
      msg:
        type: string
    type: object
  response.GetProblemListResponse:
    properties:
      problems:
        items:
          $ref: '#/definitions/model.Problem'
        type: array
    type: object
  response.GetProblemResponse:
    properties:
      problem:
        $ref: '#/definitions/model.Problem'
    type: object
  response.GetSubmissionListResponse:
    properties:
      submissions:
        items:
          $ref: '#/definitions/model.Submission'
        type: array
    type: object
  response.LoginResponse:
    properties:
      token:
        type: string
      username:
        type: string
    type: object
  response.RegisterResponse:
    properties:
      username:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
paths:
  /index:
    get:
      responses: {}
  /problem/getProblem:
    get:
      parameters:
      - in: query
        name: pid
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetProblemResponse'
              type: object
      tags:
      - Problem
  /problem/getProblemList:
    get:
      parameters:
      - in: query
        name: length
        type: integer
      - in: query
        name: startIndex
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetProblemListResponse'
              type: object
      tags:
      - Problem
  /submission/getSubmissionList:
    get:
      parameters:
      - in: query
        name: pid
        type: string
      - in: query
        name: uid
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.GetSubmissionListResponse'
              type: object
      tags:
      - Submission
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ChangePasswordResponse'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/login:
    post:
      parameters:
      - description: 用户名, 密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
              type: object
      tags:
      - User
  /user/register:
    post:
      parameters:
      - description: 用户名, 密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.RegisterResponse'
              type: object
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
